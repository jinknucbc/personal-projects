name: Deploying Multiple React Vite Applications to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy: 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with: 
          node-version: '20'

      - name: Create .env for WeatherApp
        run: |
          echo: "VITE_WEATHER_API=${{secrets.WEATHER_API}} " > ./.env
          echo: "VITE_GEO_API=${{secrets.GEO_API}} " > ./.env
        working-directory: ./react-projects/WeatherApp

      - name: Build dependencies for WeatherApp
        run: npm install
        working-directory: ./react-projects/WeatherApp

      - name: Build WeatherApp
        run: npm run build
        working-directory: ./react-projects/WeatherApp

      - name: Prepare WeatherApp for deployment
        run: |
          mkdir -p _site/WeatherApp
          cp -r react-projects/WeatherApp/dist/* _site/WeatherApp/

      - name: Create .env for ToDoList
        run: |
            echo: "VITE_FIREBASE_API=${{secrets.FIREBASE_API}}" > ./.env
            echo: "VITE_PROJECTID=${{secrets.PROJECTID}}" > ./.env
            echo: "VITE_PROJECTNUM=${{secrets.PROJECTNUM}}" > ./.env
            echo: "VITE_AUTHDOMAIN=${{secrets.AUTHDOMAIN}}" > ./.env
            echo: "VITE_STORAGEBUCKET=${{secrets.STORAGEBUCKET}}" > ./.env
            echo: "VITE_APPID=${{secrets.APPID}}" > ./.env
            echo: "VITE_MEASUREMENTID=${{secrets.MEASUREMENTID}}" > ./.env
            echo: "VITE_MESSAGINGSENDERID=${{secrets.MESSAGINGSENDERID}}" > ./.env
        working-directory: ./react-projects/ToDoList

      - name: Build dependencies for ToDoList
        run: npm install
        working-directory: ./react-projects/ToDoList

      - name: Build ToDoList
        run: npm run build
        working-directory: ./react-projects/ToDoList

      - name: Prepare ToDoList for deployment
        run: |
          mkdir -p _site/ToDoList
          cp -r react-projects/ToDoList/dist/* _site/ToDoList/

      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './_site'

  deploy: 
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-and-deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
